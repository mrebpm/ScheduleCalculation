package com.martinrea.pmpgo;

/**
 * This class was automatically generated by the data modeler tool.
 */

@javax.persistence.Entity
@org.kie.api.definition.type.Label("Input Object for Processs")
@org.kie.api.definition.type.Description("Input Object for Processs")
public class ProcessData implements java.io.Serializable {

	static final long serialVersionUID = 1L;

	@javax.persistence.GeneratedValue(strategy = javax.persistence.GenerationType.AUTO, generator = "DATA_ID_GENERATOR")
	@javax.persistence.Id
	@javax.persistence.SequenceGenerator(name = "DATA_ID_GENERATOR", sequenceName = "DATA_ID_SEQ")
	private java.lang.Long id;

	@org.kie.api.definition.type.Label(value = "Started By")
	private java.lang.String startedBy;

	@org.kie.api.definition.type.Label(value = "Completed By")
	private java.lang.String completedBy;

	@org.kie.api.definition.type.Label(value = "Status of the Process in %")
	private java.lang.Float statusByPercentage;

	@org.kie.api.definition.type.Label(value = "Workflow is Synchronized with Process Model")
	private java.lang.Boolean workflowSynchronized;

	public ProcessData() {
	}

	public java.lang.Long getId() {
		return this.id;
	}

	public void setId(java.lang.Long id) {
		this.id = id;
	}

	public java.lang.String getStartedBy() {
		return this.startedBy;
	}

	public void setStartedBy(java.lang.String startedBy) {
		this.startedBy = startedBy;
	}

	public java.lang.String getCompletedBy() {
		return this.completedBy;
	}

	public void setCompletedBy(java.lang.String completedBy) {
		this.completedBy = completedBy;
	}

	public java.lang.Float getStatusByPercentage() {
		return this.statusByPercentage;
	}

	public void setStatusByPercentage(java.lang.Float statusByPercentage) {
		this.statusByPercentage = statusByPercentage;
	}

	public java.lang.Boolean getWorkflowSynchronized() {
		return this.workflowSynchronized;
	}

	public void setWorkflowSynchronized(java.lang.Boolean workflowSynchronized) {
		this.workflowSynchronized = workflowSynchronized;
	}

	public ProcessData(java.lang.Long id, java.lang.String startedBy,
			java.lang.String completedBy, java.lang.Float statusByPercentage,
			java.lang.Boolean workflowSynchronized) {
		this.id = id;
		this.startedBy = startedBy;
		this.completedBy = completedBy;
		this.statusByPercentage = statusByPercentage;
		this.workflowSynchronized = workflowSynchronized;
	}

}